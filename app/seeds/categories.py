from app.models import db, Category, environment, SCHEMA
from sqlalchemy.sql import text


# Adds a demo user, you can add other users here if you want
def seed_categories():
    
    categories = [
        {
            'name': 'Graphics Processing Unit (GPU)',
            'description': 'GPU is designed to process images and accelerate the rendering of 3D graphics on your RIG ',
        },
        {
            'name': 'Central Proccesing Unit (CPU)',
            'description': 'Primary component that processes the signals and makes computing possible'
        },
        {
            'name': 'Memory (RAM)',
            'description': 'RAM is used to store data temporarily for quick access by the CPU',
        },
        {
            'name': 'Storage',
            'description': 'Storage devices such as HDDs and SSDs are used to store data permanently',
        },
        {
            'name': 'Motherboard',
            'description': 'Motherboard is the main circuit board that connects all components of the PC',
        },
        {
            'name': 'Cooling',
            'description': 'Cooling components are used to dissipate heat generated by the CPU and GPU',
        },
        {
            'name': 'Case',
            'description': 'Case is the enclosure that houses and protects all the PC components',
        },
        {
            'name': 'Monitor',
            'description': 'Monitors are used to display the visual output from the computer',
        },
        {
            'name': 'Power Supply Unit (PSU)',
            'description': 'crucial component in a computer system that regulates the flow of power to various components, such as the CPU, memory, and storage devices.'
        },
    ]

    for catagories_data in categories:
        category = Category(
            name=catagories_data['name'],
            description=catagories_data['description']
        )
        db.session.add(category)
    db.session.commit()

# Uses a raw SQL query to TRUNCATE or DELETE the users table. SQLAlchemy doesn't
# have a built in function to do this. With postgres in production TRUNCATE
# removes all the data from the table, and RESET IDENTITY resets the auto
# incrementing primary key, CASCADE deletes any dependent entities.  With
# sqlite3 in development you need to instead use DELETE to remove all data and
# it will reset the primary keys for you as well.
def undo_categories():
    if environment == "production":
        db.session.execute(f"TRUNCATE table {SCHEMA}.categories RESTART IDENTITY CASCADE;")
    else:
        db.session.execute(text("DELETE FROM categories"))
        
    db.session.commit()
